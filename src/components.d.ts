/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyAboutPage {
    }
    interface MyAppRoot {
    }
    interface MyButton {
        "text": string;
    }
    interface MyCard {
    }
    interface MyCategoriesPage {
    }
    interface MyFooter {
    }
    interface MyHeader {
    }
    interface MyHomePage {
    }
    interface MyInput {
    }
    interface MyLayout {
    }
    interface MyLike {
        "size": string;
    }
    interface MyNewCard {
    }
    interface MySearchBar {
    }
    interface MyStarRating {
        "totalStars": number;
    }
    interface MyWhatsNewPage {
    }
}
export interface MyStarRatingCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMyStarRatingElement;
}
declare global {
    interface HTMLMyAboutPageElement extends Components.MyAboutPage, HTMLStencilElement {
    }
    var HTMLMyAboutPageElement: {
        prototype: HTMLMyAboutPageElement;
        new (): HTMLMyAboutPageElement;
    };
    interface HTMLMyAppRootElement extends Components.MyAppRoot, HTMLStencilElement {
    }
    var HTMLMyAppRootElement: {
        prototype: HTMLMyAppRootElement;
        new (): HTMLMyAppRootElement;
    };
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLMyCardElement extends Components.MyCard, HTMLStencilElement {
    }
    var HTMLMyCardElement: {
        prototype: HTMLMyCardElement;
        new (): HTMLMyCardElement;
    };
    interface HTMLMyCategoriesPageElement extends Components.MyCategoriesPage, HTMLStencilElement {
    }
    var HTMLMyCategoriesPageElement: {
        prototype: HTMLMyCategoriesPageElement;
        new (): HTMLMyCategoriesPageElement;
    };
    interface HTMLMyFooterElement extends Components.MyFooter, HTMLStencilElement {
    }
    var HTMLMyFooterElement: {
        prototype: HTMLMyFooterElement;
        new (): HTMLMyFooterElement;
    };
    interface HTMLMyHeaderElement extends Components.MyHeader, HTMLStencilElement {
    }
    var HTMLMyHeaderElement: {
        prototype: HTMLMyHeaderElement;
        new (): HTMLMyHeaderElement;
    };
    interface HTMLMyHomePageElement extends Components.MyHomePage, HTMLStencilElement {
    }
    var HTMLMyHomePageElement: {
        prototype: HTMLMyHomePageElement;
        new (): HTMLMyHomePageElement;
    };
    interface HTMLMyInputElement extends Components.MyInput, HTMLStencilElement {
    }
    var HTMLMyInputElement: {
        prototype: HTMLMyInputElement;
        new (): HTMLMyInputElement;
    };
    interface HTMLMyLayoutElement extends Components.MyLayout, HTMLStencilElement {
    }
    var HTMLMyLayoutElement: {
        prototype: HTMLMyLayoutElement;
        new (): HTMLMyLayoutElement;
    };
    interface HTMLMyLikeElement extends Components.MyLike, HTMLStencilElement {
    }
    var HTMLMyLikeElement: {
        prototype: HTMLMyLikeElement;
        new (): HTMLMyLikeElement;
    };
    interface HTMLMyNewCardElement extends Components.MyNewCard, HTMLStencilElement {
    }
    var HTMLMyNewCardElement: {
        prototype: HTMLMyNewCardElement;
        new (): HTMLMyNewCardElement;
    };
    interface HTMLMySearchBarElement extends Components.MySearchBar, HTMLStencilElement {
    }
    var HTMLMySearchBarElement: {
        prototype: HTMLMySearchBarElement;
        new (): HTMLMySearchBarElement;
    };
    interface HTMLMyStarRatingElementEventMap {
        "ratingChange": any;
    }
    interface HTMLMyStarRatingElement extends Components.MyStarRating, HTMLStencilElement {
        addEventListener<K extends keyof HTMLMyStarRatingElementEventMap>(type: K, listener: (this: HTMLMyStarRatingElement, ev: MyStarRatingCustomEvent<HTMLMyStarRatingElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLMyStarRatingElementEventMap>(type: K, listener: (this: HTMLMyStarRatingElement, ev: MyStarRatingCustomEvent<HTMLMyStarRatingElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLMyStarRatingElement: {
        prototype: HTMLMyStarRatingElement;
        new (): HTMLMyStarRatingElement;
    };
    interface HTMLMyWhatsNewPageElement extends Components.MyWhatsNewPage, HTMLStencilElement {
    }
    var HTMLMyWhatsNewPageElement: {
        prototype: HTMLMyWhatsNewPageElement;
        new (): HTMLMyWhatsNewPageElement;
    };
    interface HTMLElementTagNameMap {
        "my-about-page": HTMLMyAboutPageElement;
        "my-app-root": HTMLMyAppRootElement;
        "my-button": HTMLMyButtonElement;
        "my-card": HTMLMyCardElement;
        "my-categories-page": HTMLMyCategoriesPageElement;
        "my-footer": HTMLMyFooterElement;
        "my-header": HTMLMyHeaderElement;
        "my-home-page": HTMLMyHomePageElement;
        "my-input": HTMLMyInputElement;
        "my-layout": HTMLMyLayoutElement;
        "my-like": HTMLMyLikeElement;
        "my-new-card": HTMLMyNewCardElement;
        "my-search-bar": HTMLMySearchBarElement;
        "my-star-rating": HTMLMyStarRatingElement;
        "my-whats-new-page": HTMLMyWhatsNewPageElement;
    }
}
declare namespace LocalJSX {
    interface MyAboutPage {
    }
    interface MyAppRoot {
    }
    interface MyButton {
        "text"?: string;
    }
    interface MyCard {
    }
    interface MyCategoriesPage {
    }
    interface MyFooter {
    }
    interface MyHeader {
    }
    interface MyHomePage {
    }
    interface MyInput {
    }
    interface MyLayout {
    }
    interface MyLike {
        "size"?: string;
    }
    interface MyNewCard {
    }
    interface MySearchBar {
    }
    interface MyStarRating {
        "onRatingChange"?: (event: MyStarRatingCustomEvent<any>) => void;
        "totalStars"?: number;
    }
    interface MyWhatsNewPage {
    }
    interface IntrinsicElements {
        "my-about-page": MyAboutPage;
        "my-app-root": MyAppRoot;
        "my-button": MyButton;
        "my-card": MyCard;
        "my-categories-page": MyCategoriesPage;
        "my-footer": MyFooter;
        "my-header": MyHeader;
        "my-home-page": MyHomePage;
        "my-input": MyInput;
        "my-layout": MyLayout;
        "my-like": MyLike;
        "my-new-card": MyNewCard;
        "my-search-bar": MySearchBar;
        "my-star-rating": MyStarRating;
        "my-whats-new-page": MyWhatsNewPage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-about-page": LocalJSX.MyAboutPage & JSXBase.HTMLAttributes<HTMLMyAboutPageElement>;
            "my-app-root": LocalJSX.MyAppRoot & JSXBase.HTMLAttributes<HTMLMyAppRootElement>;
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
            "my-card": LocalJSX.MyCard & JSXBase.HTMLAttributes<HTMLMyCardElement>;
            "my-categories-page": LocalJSX.MyCategoriesPage & JSXBase.HTMLAttributes<HTMLMyCategoriesPageElement>;
            "my-footer": LocalJSX.MyFooter & JSXBase.HTMLAttributes<HTMLMyFooterElement>;
            "my-header": LocalJSX.MyHeader & JSXBase.HTMLAttributes<HTMLMyHeaderElement>;
            "my-home-page": LocalJSX.MyHomePage & JSXBase.HTMLAttributes<HTMLMyHomePageElement>;
            "my-input": LocalJSX.MyInput & JSXBase.HTMLAttributes<HTMLMyInputElement>;
            "my-layout": LocalJSX.MyLayout & JSXBase.HTMLAttributes<HTMLMyLayoutElement>;
            "my-like": LocalJSX.MyLike & JSXBase.HTMLAttributes<HTMLMyLikeElement>;
            "my-new-card": LocalJSX.MyNewCard & JSXBase.HTMLAttributes<HTMLMyNewCardElement>;
            "my-search-bar": LocalJSX.MySearchBar & JSXBase.HTMLAttributes<HTMLMySearchBarElement>;
            "my-star-rating": LocalJSX.MyStarRating & JSXBase.HTMLAttributes<HTMLMyStarRatingElement>;
            "my-whats-new-page": LocalJSX.MyWhatsNewPage & JSXBase.HTMLAttributes<HTMLMyWhatsNewPageElement>;
        }
    }
}
